//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorDaily.WSPartner {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DotitCredentials", Namespace="http://dotit.com.org/")]
    [System.SerializableAttribute()]
    public partial class DotitCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        private int partnerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                if ((object.ReferenceEquals(this.userIdField, value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int partnerId {
            get {
                return this.partnerIdField;
            }
            set {
                if ((this.partnerIdField.Equals(value) != true)) {
                    this.partnerIdField = value;
                    this.RaisePropertyChanged("partnerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateSessionResponse", Namespace="http://dotit.com.org/")]
    [System.SerializableAttribute()]
    public partial class CreateSessionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorDaily.WSPartner.DotitServiceResult dsrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sessionGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public EpicorDaily.WSPartner.DotitServiceResult dsr {
            get {
                return this.dsrField;
            }
            set {
                if ((object.ReferenceEquals(this.dsrField, value) != true)) {
                    this.dsrField = value;
                    this.RaisePropertyChanged("dsr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sessionGuid {
            get {
                return this.sessionGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.sessionGuidField, value) != true)) {
                    this.sessionGuidField = value;
                    this.RaisePropertyChanged("sessionGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DotitServiceResult", Namespace="http://dotit.com.org/")]
    [System.SerializableAttribute()]
    public partial class DotitServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool successField;
        
        private int returnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string returnMessageField;
        
        private int returnIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorDaily.WSPartner.DLogMessage[] listMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int returnCode {
            get {
                return this.returnCodeField;
            }
            set {
                if ((this.returnCodeField.Equals(value) != true)) {
                    this.returnCodeField = value;
                    this.RaisePropertyChanged("returnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string returnMessage {
            get {
                return this.returnMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.returnMessageField, value) != true)) {
                    this.returnMessageField = value;
                    this.RaisePropertyChanged("returnMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int returnID {
            get {
                return this.returnIDField;
            }
            set {
                if ((this.returnIDField.Equals(value) != true)) {
                    this.returnIDField = value;
                    this.RaisePropertyChanged("returnID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public EpicorDaily.WSPartner.DLogMessage[] listMessages {
            get {
                return this.listMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.listMessagesField, value) != true)) {
                    this.listMessagesField = value;
                    this.RaisePropertyChanged("listMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DLogMessage", Namespace="http://dotit.com.org/")]
    [System.SerializableAttribute()]
    public partial class DLogMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private EpicorDaily.WSPartner.LogLevel messageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        private bool notifyByEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public EpicorDaily.WSPartner.LogLevel messageType {
            get {
                return this.messageTypeField;
            }
            set {
                if ((this.messageTypeField.Equals(value) != true)) {
                    this.messageTypeField = value;
                    this.RaisePropertyChanged("messageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool notifyByEmail {
            get {
                return this.notifyByEmailField;
            }
            set {
                if ((this.notifyByEmailField.Equals(value) != true)) {
                    this.notifyByEmailField = value;
                    this.RaisePropertyChanged("notifyByEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogLevel", Namespace="http://dotit.com.org/")]
    public enum LogLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warn = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dotit.com.org/", ConfigurationName="WSPartner.DotitPartnerSoap")]
    public interface DotitPartnerSoap {
        
        // CODEGEN: Generating message contract since element name toEncrypt from namespace http://dotit.com.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://dotit.com.org/EncryptString", ReplyAction="*")]
        EpicorDaily.WSPartner.EncryptStringResponse EncryptString(EpicorDaily.WSPartner.EncryptStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dotit.com.org/EncryptString", ReplyAction="*")]
        System.Threading.Tasks.Task<EpicorDaily.WSPartner.EncryptStringResponse> EncryptStringAsync(EpicorDaily.WSPartner.EncryptStringRequest request);
        
        // CODEGEN: Generating message contract since element name cred from namespace http://dotit.com.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://dotit.com.org/CreateAccountUserSession", ReplyAction="*")]
        EpicorDaily.WSPartner.CreateAccountUserSessionResponse CreateAccountUserSession(EpicorDaily.WSPartner.CreateAccountUserSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dotit.com.org/CreateAccountUserSession", ReplyAction="*")]
        System.Threading.Tasks.Task<EpicorDaily.WSPartner.CreateAccountUserSessionResponse> CreateAccountUserSessionAsync(EpicorDaily.WSPartner.CreateAccountUserSessionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EncryptStringRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EncryptString", Namespace="http://dotit.com.org/", Order=0)]
        public EpicorDaily.WSPartner.EncryptStringRequestBody Body;
        
        public EncryptStringRequest() {
        }
        
        public EncryptStringRequest(EpicorDaily.WSPartner.EncryptStringRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dotit.com.org/")]
    public partial class EncryptStringRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string toEncrypt;
        
        public EncryptStringRequestBody() {
        }
        
        public EncryptStringRequestBody(string toEncrypt) {
            this.toEncrypt = toEncrypt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EncryptStringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EncryptStringResponse", Namespace="http://dotit.com.org/", Order=0)]
        public EpicorDaily.WSPartner.EncryptStringResponseBody Body;
        
        public EncryptStringResponse() {
        }
        
        public EncryptStringResponse(EpicorDaily.WSPartner.EncryptStringResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dotit.com.org/")]
    public partial class EncryptStringResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string EncryptStringResult;
        
        public EncryptStringResponseBody() {
        }
        
        public EncryptStringResponseBody(string EncryptStringResult) {
            this.EncryptStringResult = EncryptStringResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateAccountUserSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateAccountUserSession", Namespace="http://dotit.com.org/", Order=0)]
        public EpicorDaily.WSPartner.CreateAccountUserSessionRequestBody Body;
        
        public CreateAccountUserSessionRequest() {
        }
        
        public CreateAccountUserSessionRequest(EpicorDaily.WSPartner.CreateAccountUserSessionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dotit.com.org/")]
    public partial class CreateAccountUserSessionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public EpicorDaily.WSPartner.DotitCredentials cred;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int keepAlive;
        
        public CreateAccountUserSessionRequestBody() {
        }
        
        public CreateAccountUserSessionRequestBody(EpicorDaily.WSPartner.DotitCredentials cred, int keepAlive) {
            this.cred = cred;
            this.keepAlive = keepAlive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateAccountUserSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateAccountUserSessionResponse", Namespace="http://dotit.com.org/", Order=0)]
        public EpicorDaily.WSPartner.CreateAccountUserSessionResponseBody Body;
        
        public CreateAccountUserSessionResponse() {
        }
        
        public CreateAccountUserSessionResponse(EpicorDaily.WSPartner.CreateAccountUserSessionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dotit.com.org/")]
    public partial class CreateAccountUserSessionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public EpicorDaily.WSPartner.CreateSessionResponse CreateAccountUserSessionResult;
        
        public CreateAccountUserSessionResponseBody() {
        }
        
        public CreateAccountUserSessionResponseBody(EpicorDaily.WSPartner.CreateSessionResponse CreateAccountUserSessionResult) {
            this.CreateAccountUserSessionResult = CreateAccountUserSessionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DotitPartnerSoapChannel : EpicorDaily.WSPartner.DotitPartnerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DotitPartnerSoapClient : System.ServiceModel.ClientBase<EpicorDaily.WSPartner.DotitPartnerSoap>, EpicorDaily.WSPartner.DotitPartnerSoap {
        
        public DotitPartnerSoapClient() {
        }
        
        public DotitPartnerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DotitPartnerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DotitPartnerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DotitPartnerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorDaily.WSPartner.EncryptStringResponse EpicorDaily.WSPartner.DotitPartnerSoap.EncryptString(EpicorDaily.WSPartner.EncryptStringRequest request) {
            return base.Channel.EncryptString(request);
        }
        
        public string EncryptString(string toEncrypt) {
            EpicorDaily.WSPartner.EncryptStringRequest inValue = new EpicorDaily.WSPartner.EncryptStringRequest();
            inValue.Body = new EpicorDaily.WSPartner.EncryptStringRequestBody();
            inValue.Body.toEncrypt = toEncrypt;
            EpicorDaily.WSPartner.EncryptStringResponse retVal = ((EpicorDaily.WSPartner.DotitPartnerSoap)(this)).EncryptString(inValue);
            return retVal.Body.EncryptStringResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EpicorDaily.WSPartner.EncryptStringResponse> EpicorDaily.WSPartner.DotitPartnerSoap.EncryptStringAsync(EpicorDaily.WSPartner.EncryptStringRequest request) {
            return base.Channel.EncryptStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<EpicorDaily.WSPartner.EncryptStringResponse> EncryptStringAsync(string toEncrypt) {
            EpicorDaily.WSPartner.EncryptStringRequest inValue = new EpicorDaily.WSPartner.EncryptStringRequest();
            inValue.Body = new EpicorDaily.WSPartner.EncryptStringRequestBody();
            inValue.Body.toEncrypt = toEncrypt;
            return ((EpicorDaily.WSPartner.DotitPartnerSoap)(this)).EncryptStringAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorDaily.WSPartner.CreateAccountUserSessionResponse EpicorDaily.WSPartner.DotitPartnerSoap.CreateAccountUserSession(EpicorDaily.WSPartner.CreateAccountUserSessionRequest request) {
            return base.Channel.CreateAccountUserSession(request);
        }
        
        public EpicorDaily.WSPartner.CreateSessionResponse CreateAccountUserSession(EpicorDaily.WSPartner.DotitCredentials cred, int keepAlive) {
            EpicorDaily.WSPartner.CreateAccountUserSessionRequest inValue = new EpicorDaily.WSPartner.CreateAccountUserSessionRequest();
            inValue.Body = new EpicorDaily.WSPartner.CreateAccountUserSessionRequestBody();
            inValue.Body.cred = cred;
            inValue.Body.keepAlive = keepAlive;
            EpicorDaily.WSPartner.CreateAccountUserSessionResponse retVal = ((EpicorDaily.WSPartner.DotitPartnerSoap)(this)).CreateAccountUserSession(inValue);
            return retVal.Body.CreateAccountUserSessionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EpicorDaily.WSPartner.CreateAccountUserSessionResponse> EpicorDaily.WSPartner.DotitPartnerSoap.CreateAccountUserSessionAsync(EpicorDaily.WSPartner.CreateAccountUserSessionRequest request) {
            return base.Channel.CreateAccountUserSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<EpicorDaily.WSPartner.CreateAccountUserSessionResponse> CreateAccountUserSessionAsync(EpicorDaily.WSPartner.DotitCredentials cred, int keepAlive) {
            EpicorDaily.WSPartner.CreateAccountUserSessionRequest inValue = new EpicorDaily.WSPartner.CreateAccountUserSessionRequest();
            inValue.Body = new EpicorDaily.WSPartner.CreateAccountUserSessionRequestBody();
            inValue.Body.cred = cred;
            inValue.Body.keepAlive = keepAlive;
            return ((EpicorDaily.WSPartner.DotitPartnerSoap)(this)).CreateAccountUserSessionAsync(inValue);
        }
    }
}
